Tests for the module 7-base_geometry
::

Import the module:
		>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test for valid cases:
		>>> bg = BaseGeometry()

		>>> bg.integer_validator("int", 12)

		>>> bg.integer_validator("int1", 10000000)

Test for invalid cases
		>>> bg.integer_validator("int1", 12.0)
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", -12)
		Traceback (most recent call last):
		...
		ValueError: int1 must be greater than 0

		>>> bg.integer_validator("int1", 0)
		Traceback (most recent call last):
		...
		ValueError: int1 must be greater than 0

		>>> bg.integer_validator("int1")
		Traceback (most recent call last):
		...
		TypeError: integer_validator() missing 1 required positional argument: 'value'

		>>> bg.integer_validator()
		Traceback (most recent call last):
		...
		TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

		>>> n = float('inf')

		>>> bg.integer_validator("hello", int(n))
		Traceback (most recent call last):
		...
		OverflowError: cannot convert float infinity to integer

		>>> bg.area()
		Traceback (most recent call last):
		...
		Exception: area() is not implemented

		>>> bg.integer_validator("int1", [1, 2])
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", "123")
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", (1, 2))
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", None)
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", (1, 2, 3))
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", {1, 2})
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", {1 : 2})
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", "John")
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer

		>>> bg.integer_validator("int1", True)
		Traceback (most recent call last):
		...
		TypeError: int1 must be an integer
